# {{ project_name }}

## Project Overview

This Django project was generated using the Django Boilerplate Generator.

{% if apps %}
## Applications
{% for app in apps %}
- {{ app }}
{% endfor %}
{% endif %}

## Project Structure

The core Django configuration is located {% if core_location == 'inside' %}inside the apps directory{% else %}in the project root{% endif %}.

## Features

{% if use_docker %}
- Docker configuration
{% endif %}
{% if use_celery %}
- Celery for background task processing
{% endif %}
{% if use_redis %}
- Redis for caching and sessions
{% endif %}

## Setup Instructions

1. Clone the repository
2. Install dependencies: `pip install -r requirements.txt`
{% if use_docker %}
3. Build and run with Docker: `docker-compose up -d`
{% else %}
3. Run migrations: `python manage.py migrate`
4. Start the development server: `python manage.py runserver`
{% endif %}

## Development

- Create a superuser: `python manage.py createsuperuser`
- Run tests: `python manage.py test`

## Deployment

Follow best practices for deploying Django applications in production:
- Use a production-ready web server (Gunicorn, uWSGI)
- Configure static file serving
- Set up proper database security
- Use environment variables for sensitive configuration